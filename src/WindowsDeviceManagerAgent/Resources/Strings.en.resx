<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="SentenceRequiredWord" xml:space="preserve">
    <value>&lt;Required&gt;</value>
  </data>
  <data name="SentenceOptionGroupWord" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="SentenceErrorsHeadingText" xml:space="preserve">
    <value>ERROR(S):</value>
  </data>
  <data name="SentenceUsageHeadingText" xml:space="preserve">
    <value>USAGE:</value>
  </data>
  <data name="SentenceHelpCommandTextOption" xml:space="preserve">
    <value>Display this help screen.</value>
  </data>
  <data name="SentenceHelpCommandTextVerb" xml:space="preserve">
    <value>Display more information on a specific command.</value>
  </data>
  <data name="SentenceVersionCommandText" xml:space="preserve">
    <value>Display version information.</value>
  </data>
  <data name="SentenceBadFormatTokenError" xml:space="preserve">
    <value>Token '{0}' is not recognized.</value>
  </data>
  <data name="SentenceMissingValueOptionError" xml:space="preserve">
    <value>Option '{0}' has no value.</value>
  </data>
  <data name="SentenceUnknownOptionError" xml:space="preserve">
    <value>Option '{0}' is unknown.</value>
  </data>
  <data name="SentenceMissingRequiredOptionErrorValue" xml:space="preserve">
    <value>A required value not bound to option name is missing.</value>
  </data>
  <data name="SentenceMissingRequiredOptionErrorOption" xml:space="preserve">
    <value>Required option '{0}' is missing.</value>
  </data>
  <data name="SentenceBadFormatConversionErrorValue" xml:space="preserve">
    <value>A value not bound to option name is defined with a bad format.</value>
  </data>
  <data name="SentenceBadFormatConversionErrorOption" xml:space="preserve">
    <value>Option '{0}' is defined with a bad format.</value>
  </data>
  <data name="SentenceSequenceOutOfRangeErrorValue" xml:space="preserve">
    <value>A sequence value not bound to option name is defined with few items than required.</value>
  </data>
  <data name="SentenceSequenceOutOfRangeErrorOption" xml:space="preserve">
    <value>A sequence option '{0}' is defined with fewer or more items than required.</value>
  </data>
  <data name="SentenceBadVerbSelectedError" xml:space="preserve">
    <value>Verb '{0}' is not recognized.</value>
  </data>
  <data name="SentenceNoVerbSelectedError" xml:space="preserve">
    <value>No verb selected.</value>
  </data>
  <data name="SentenceRepeatedOptionError" xml:space="preserve">
    <value>Option '{0}' is defined multiple times.</value>
  </data>
  <data name="SentenceSetValueExceptionError" xml:space="preserve">
    <value>Error setting value to option '{0}': {1}</value>
  </data>
  <data name="MissingGroupOptionError" xml:space="preserve">
    <value>At least one option from group '{0}' ({1}) is required.</value>
  </data>
  <data name="GroupOptionAmbiguityError" xml:space="preserve">
    <value>Both SetName and Group are not allowed in option: ({0})</value>
  </data>
  <data name="SentenceMutuallyExclusiveSetErrors" xml:space="preserve">
    <value>Options: {0} are not compatible with {1}.</value>
  </data>
  <data name="ImportantNotice" xml:space="preserve">
    <value>===Important notice===</value>
  </data>
  <data name="MessageFatalError" xml:space="preserve">
    <value>A fatal error occurred.
Exit this application.
Detailed information of the error has been saved in [FatalerrorInformation.log].</value>
  </data>
  <data name="HelpTextVerbose" xml:space="preserve">
    <value>The results of the processing are displayed in detail.</value>
  </data>
  <data name="MessagePause" xml:space="preserve">
    <value>Please press the any key.</value>
  </data>
  <data name="MessageNowCollecting" xml:space="preserve">
    <value>Collecting Windows device information ...</value>
  </data>
  <data name="MessageComplete" xml:space="preserve">
    <value>Completed.</value>
  </data>
  <data name="MessageThanks" xml:space="preserve">
    <value>Thank you for your cooperation.</value>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
  </data>
  <data name="HostName" xml:space="preserve">
    <value>Host name</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User name</value>
  </data>
  <data name="OSName" xml:space="preserve">
    <value>OS name</value>
  </data>
  <data name="OSBuildNumber" xml:space="preserve">
    <value>OS build number</value>
  </data>
  <data name="OSVersion" xml:space="preserve">
    <value>OS version</value>
  </data>
  <data name="LastUpdate" xml:space="preserve">
    <value>Last update</value>
  </data>
  <data name="CollectResultStart" xml:space="preserve">
    <value>=====Collection Results Starat=====</value>
  </data>
  <data name="CollectResultEnd" xml:space="preserve">
    <value>=====Collection results End=====</value>
  </data>
  <data name="MessageCreateDatabase" xml:space="preserve">
    <value>Database file was generated.</value>
  </data>
  <data name="MessageDatabaseNotFound" xml:space="preserve">
    <value>Database file is not found.</value>
  </data>
  <data name="ComputerManufacturer" xml:space="preserve">
    <value>Computer manufacturer</value>
  </data>
  <data name="ComputerModel" xml:space="preserve">
    <value>Computer model</value>
  </data>
  <data name="MessageDetectOldDatabase" xml:space="preserve">
    <value>An old version of the database file has been detected.</value>
  </data>
  <data name="MessageUpdateDatabaseComplete" xml:space="preserve">
    <value>The database file has been upgraded.</value>
  </data>
  <data name="Processor" xml:space="preserve">
    <value>Processor</value>
  </data>
  <data name="BIOSManufacturer" xml:space="preserve">
    <value>BIOS manufacturer</value>
  </data>
  <data name="BIOSVersion" xml:space="preserve">
    <value>BIOS version</value>
  </data>
  <data name="BitLockerStatus" xml:space="preserve">
    <value>BitLocker status</value>
  </data>
  <data name="BitLockerStatusAllDiskEnable" xml:space="preserve">
    <value>All fixed disks are enable</value>
  </data>
  <data name="BitLockerStatusAllDiskDisable" xml:space="preserve">
    <value>All fixed disks are disable</value>
  </data>
  <data name="BitLockerStatusAnyDiskDisable" xml:space="preserve">
    <value>Either fixed disk is disable</value>
  </data>
  <data name="BitLockerStatusAnyDiskEncrypting" xml:space="preserve">
    <value>Either fixed disk is encrypting</value>
  </data>
  <data name="BitLockerStatusAnyDiskDecrypting" xml:space="preserve">
    <value>Either fixed disk is decrypting</value>
  </data>
  <data name="BitLockerStatusAnyDiskSuspended" xml:space="preserve">
    <value>Either fixed disk is suspended</value>
  </data>
  <data name="BitLockerStatusAnyDiskOnLocked" xml:space="preserve">
    <value>Either fixed disk is enable(lock)</value>
  </data>
  <data name="BitLockerStatusAnyDiskWaitingForActivation" xml:space="preserve">
    <value>Either fixed disk is waiting for activation</value>
  </data>
  <data name="BitLockerStatusAnyDiskUnknown" xml:space="preserve">
    <value>Either fixed disk is unknown</value>
  </data>
  <data name="AntiVirusSoftware" xml:space="preserve">
    <value>Antivirus software</value>
  </data>
  <data name="HelpTextOutput" xml:space="preserve">
    <value>Output the results of the process to the file.(--output [json|xml|csv])</value>
  </data>
  <data name="MessageCreateJsonFile" xml:space="preserve">
    <value>JSON file has been generated.</value>
  </data>
  <data name="MessageCreateXmlFile" xml:space="preserve">
    <value>XML file has been generated.</value>
  </data>
  <data name="MessageCreateCsvFile" xml:space="preserve">
    <value>CSV file has been generated.</value>
  </data>
  <data name="JavaVersioncheckResult" xml:space="preserve">
    <value>Java version check result</value>
  </data>
  <data name="Undetected" xml:space="preserve">
    <value>Undetected</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Publisher" xml:space="preserve">
    <value>Publisher</value>
  </data>
  <data name="InstallCheckResult" xml:space="preserve">
    <value>Installation check result</value>
  </data>
  <data name="NotCollected" xml:space="preserve">
    <value>Not collected</value>
  </data>
</root>